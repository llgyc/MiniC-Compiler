const int N = 50;

int getReverse(int a[], int l, int r) {
    int tmp[N];
    if (r - l <= 1) return 0;
    int mid = (l + r) / 2;
    int ret = 0;
    ret = ret + getReverse(a, l, mid);
    ret = ret + getReverse(a, mid, r);
    int p1 = l, p2 = mid, p3 = 0;
    while (p1 < mid && p2 < r) {
        if (a[p1] <= a[p2]) {
            tmp[p3] = a[p1];
            p1 = p1 + 1;
            p3 = p3 + 1;
        } else {
            ret = ret + mid - p1;
            tmp[p3] = a[p2];
            p2 = p2 + 1;
            p3 = p3 + 1;
        }
    }
    while (p1 < mid) {
        tmp[p3] = a[p1];
        p1 = p1 + 1;
        p3 = p3 + 1;
    }
    while (p2 < r) {
        tmp[p3] = a[p2];
        p2 = p2 + 1;
        p3 = p3 + 1;
    }
    p1 = l;
    p2 = 0;
    while (p1 < r) {
        a[p1] = tmp[p2];
        p1 = p1 + 1;
        p2 = p2 + 1;
    }
    return ret;
}

int a[N];
int ans;

int main() {
    int n = getarray(a);
    ans = getReverse(a, 0, n);
    putint(ans);
    return 0;
}


